{"version":3,"file":"xdr.js","mappings":"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","sources":["webpack://XDR/webpack/universalModuleDefinition","webpack://XDR/./src/array.js","webpack://XDR/./src/bool.js","webpack://XDR/./src/browser.js","webpack://XDR/./src/config.js","webpack://XDR/./src/double.js","webpack://XDR/./src/enum.js","webpack://XDR/./src/errors.js","webpack://XDR/./src/float.js","webpack://XDR/./src/hyper.js","webpack://XDR/./src/index.js","webpack://XDR/./src/int.js","webpack://XDR/./src/opaque.js","webpack://XDR/./src/option.js","webpack://XDR/./src/quadruple.js","webpack://XDR/./src/reference.js","webpack://XDR/./src/serialization/xdr-reader.js","webpack://XDR/./src/serialization/xdr-writer.js","webpack://XDR/./src/string.js","webpack://XDR/./src/struct.js","webpack://XDR/./src/types.js","webpack://XDR/./src/union.js","webpack://XDR/./src/unsigned-hyper.js","webpack://XDR/./src/unsigned-int.js","webpack://XDR/./src/var-array.js","webpack://XDR/./src/var-opaque.js","webpack://XDR/./src/void.js","webpack://XDR/./src/xdr-type.js","webpack://XDR/webpack/bootstrap","webpack://XDR/webpack/runtime/define property getters","webpack://XDR/webpack/runtime/hasOwnProperty shorthand","webpack://XDR/webpack/runtime/make namespace object","webpack://XDR/webpack/before-startup","webpack://XDR/webpack/startup","webpack://XDR/webpack/after-startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"XDR\"] = factory();\n\telse\n\t\troot[\"XDR\"] = factory();\n})(this, () => {\nreturn ","import { XdrCompositeType } from './xdr-type';\nimport { XdrWriterError } from './errors';\n\nexport class Array extends XdrCompositeType {\n  constructor(childType, length) {\n    super();\n    this._childType = childType;\n    this._length = length;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  read(reader) {\n    // allocate array of specified length\n    const result = new global.Array(this._length);\n    // read values\n    for (let i = 0; i < this._length; i++) {\n      result[i] = this._childType.read(reader);\n    }\n    return result;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  write(value, writer) {\n    if (!(value instanceof global.Array))\n      throw new XdrWriterError(`value is not array`);\n\n    if (value.length !== this._length)\n      throw new XdrWriterError(`got array of size ${value.length}, expected ${this._length}`);\n\n    for (const child of value) {\n      this._childType.write(child, writer);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  isValid(value) {\n    if (!(value instanceof global.Array) || value.length !== this._length) {\n      return false;\n    }\n\n    for (const child of value) {\n      if (!this._childType.isValid(child))\n        return false;\n    }\n    return true;\n  }\n}\n","import { Int } from './int';\nimport { XdrPrimitiveType } from './xdr-type';\nimport { XdrReaderError } from './errors';\n\nexport class Bool extends XdrPrimitiveType {\n  /**\n   * @inheritDoc\n   */\n  static read(reader) {\n    const value = Int.read(reader);\n\n    switch (value) {\n      case 0:\n        return false;\n      case 1:\n        return true;\n      default:\n        throw new XdrReaderError(`got ${value} when trying to read a bool`);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  static write(value, writer) {\n    const intVal = value ? 1 : 0;\n    Int.write(intVal, writer);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  static isValid(value) {\n    return typeof value === 'boolean';\n  }\n}","// eslint-disable-next-line prefer-import/prefer-import-over-require\nconst exports = require('./index');\nmodule.exports = exports;\n","// eslint-disable-next-line max-classes-per-file\nimport * as XDRTypes from './types';\nimport { Reference } from './reference';\nimport { XdrDefinitionError } from './errors';\n\nexport * from './reference';\n\nclass SimpleReference extends Reference {\n  constructor(name) {\n    super();\n    this.name = name;\n  }\n\n  resolve(context) {\n    const defn = context.definitions[this.name];\n    return defn.resolve(context);\n  }\n}\n\nclass ArrayReference extends Reference {\n  constructor(childReference, length, variable = false) {\n    super();\n    this.childReference = childReference;\n    this.length = length;\n    this.variable = variable;\n  }\n\n  resolve(context) {\n    let resolvedChild = this.childReference;\n    let length = this.length;\n\n    if (resolvedChild instanceof Reference) {\n      resolvedChild = resolvedChild.resolve(context);\n    }\n\n    if (length instanceof Reference) {\n      length = length.resolve(context);\n    }\n\n    if (this.variable) {\n      return new XDRTypes.VarArray(resolvedChild, length);\n    }\n    return new XDRTypes.Array(resolvedChild, length);\n  }\n}\n\nclass OptionReference extends Reference {\n  constructor(childReference) {\n    super();\n    this.childReference = childReference;\n    this.name = childReference.name;\n  }\n\n  resolve(context) {\n    let resolvedChild = this.childReference;\n\n    if (resolvedChild instanceof Reference) {\n      resolvedChild = resolvedChild.resolve(context);\n    }\n\n    return new XDRTypes.Option(resolvedChild);\n  }\n}\n\nclass SizedReference extends Reference {\n  constructor(sizedType, length) {\n    super();\n    this.sizedType = sizedType;\n    this.length = length;\n  }\n\n  resolve(context) {\n    let length = this.length;\n\n    if (length instanceof Reference) {\n      length = length.resolve(context);\n    }\n\n    return new this.sizedType(length);\n  }\n}\n\nclass Definition {\n  constructor(constructor, name, cfg) {\n    this.constructor = constructor;\n    this.name = name;\n    this.config = cfg;\n  }\n\n  // resolve calls the constructor of this definition with the provided context\n  // and this definitions config values.  The definitions constructor should\n  // populate the final type on `context.results`, and may refer to other\n  // definitions through `context.definitions`\n  resolve(context) {\n    if (this.name in context.results) {\n      return context.results[this.name];\n    }\n\n    return this.constructor(context, this.name, this.config);\n  }\n}\n\n// let the reference resolution system do its thing\n// the \"constructor\" for a typedef just returns the resolved value\nfunction createTypedef(context, typeName, value) {\n  if (value instanceof Reference) {\n    value = value.resolve(context);\n  }\n  context.results[typeName] = value;\n  return value;\n}\n\nfunction createConst(context, name, value) {\n  context.results[name] = value;\n  return value;\n}\n\nclass TypeBuilder {\n  constructor(destination) {\n    this._destination = destination;\n    this._definitions = {};\n  }\n\n  enum(name, members) {\n    const result = new Definition(XDRTypes.Enum.create, name, members);\n    this.define(name, result);\n  }\n\n  struct(name, members) {\n    const result = new Definition(XDRTypes.Struct.create, name, members);\n    this.define(name, result);\n  }\n\n  union(name, cfg) {\n    const result = new Definition(XDRTypes.Union.create, name, cfg);\n    this.define(name, result);\n  }\n\n  typedef(name, cfg) {\n    const result = new Definition(createTypedef, name, cfg);\n    this.define(name, result);\n  }\n\n  const(name, cfg) {\n    const result = new Definition(createConst, name, cfg);\n    this.define(name, result);\n  }\n\n  void() {\n    return XDRTypes.Void;\n  }\n\n  bool() {\n    return XDRTypes.Bool;\n  }\n\n  int() {\n    return XDRTypes.Int;\n  }\n\n  hyper() {\n    return XDRTypes.Hyper;\n  }\n\n  uint() {\n    return XDRTypes.UnsignedInt;\n  }\n\n  uhyper() {\n    return XDRTypes.UnsignedHyper;\n  }\n\n  float() {\n    return XDRTypes.Float;\n  }\n\n  double() {\n    return XDRTypes.Double;\n  }\n\n  quadruple() {\n    return XDRTypes.Quadruple;\n  }\n\n  string(length) {\n    return new SizedReference(XDRTypes.String, length);\n  }\n\n  opaque(length) {\n    return new SizedReference(XDRTypes.Opaque, length);\n  }\n\n  varOpaque(length) {\n    return new SizedReference(XDRTypes.VarOpaque, length);\n  }\n\n  array(childType, length) {\n    return new ArrayReference(childType, length);\n  }\n\n  varArray(childType, maxLength) {\n    return new ArrayReference(childType, maxLength, true);\n  }\n\n  option(childType) {\n    return new OptionReference(childType);\n  }\n\n  define(name, definition) {\n    if (this._destination[name] === undefined) {\n      this._definitions[name] = definition;\n    } else {\n      throw new XdrDefinitionError(`${name} is already defined`);\n    }\n  }\n\n  lookup(name) {\n    return new SimpleReference(name);\n  }\n\n  resolve() {\n    for (const defn of Object.values(this._definitions)) {\n      defn.resolve({\n        definitions: this._definitions,\n        results: this._destination\n      });\n    }\n  }\n}\n\nexport function config(fn, types = {}) {\n  if (fn) {\n    const builder = new TypeBuilder(types);\n    fn(builder);\n    builder.resolve();\n  }\n\n  return types;\n}","import { XdrPrimitiveType } from './xdr-type';\nimport { XdrWriterError } from './errors';\n\nexport class Double extends XdrPrimitiveType {\n  /**\n   * @inheritDoc\n   */\n  static read(reader) {\n    return reader.readDoubleBE();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  static write(value, writer) {\n    if (typeof value !== 'number')\n      throw new XdrWriterError('not a number');\n\n    writer.writeDoubleBE(value);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  static isValid(value) {\n    return typeof value === 'number';\n  }\n}\n","import { Int } from './int';\nimport { XdrPrimitiveType } from './xdr-type';\nimport { XdrReaderError, XdrWriterError } from './errors';\n\nexport class Enum extends XdrPrimitiveType {\n  constructor(name, value) {\n    super();\n    this.name = name;\n    this.value = value;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  static read(reader) {\n    const intVal = Int.read(reader);\n    const res = this._byValue[intVal];\n    if (res === undefined)\n      throw new XdrReaderError(`unknown ${this.enumName} member for value ${intVal}`);\n    return res;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  static write(value, writer) {\n    if (!(value instanceof this))\n      throw new XdrWriterError(`unknown ${value} is not a ${this.enumName}`);\n\n    Int.write(value.value, writer);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  static isValid(value) {\n    return value instanceof this;\n  }\n\n  static members() {\n    return this._members;\n  }\n\n  static values() {\n    return Object.values(this._members);\n  }\n\n  static fromName(name) {\n    const result = this._members[name];\n\n    if (!result)\n      throw new TypeError(`${name} is not a member of ${this.enumName}`);\n\n    return result;\n  }\n\n  static fromValue(value) {\n    const result = this._byValue[value];\n    if (result === undefined)\n      throw new TypeError(`${value} is not a value of any member of ${this.enumName}`);\n     return result;\n  }\n\n  static create(context, name, members) {\n    const ChildEnum = class extends Enum {\n    };\n\n    ChildEnum.enumName = name;\n    context.results[name] = ChildEnum;\n\n    ChildEnum._members = {};\n    ChildEnum._byValue = {};\n\n    for (const [key, value] of Object.entries(members)) {\n      const inst = new ChildEnum(key, value);\n      ChildEnum._members[key] = inst;\n      ChildEnum._byValue[value] = inst;\n      ChildEnum[key] = () => inst;\n    }\n\n    return ChildEnum;\n  }\n}","export class XdrWriterError extends TypeError {\n  constructor(message) {\n    super(`XDR Write Error: ${message}`);\n  }\n}\n\nexport class XdrReaderError extends TypeError {\n  constructor(message) {\n    super(`XDR Read Error: ${message}`);\n  }\n}\n\nexport class XdrDefinitionError extends TypeError {\n  constructor(message) {\n    super(`XDR Type Definition Error: ${message}`);\n  }\n}\n\nexport class XdrNotImplementedDefinitionError extends XdrDefinitionError {\n  constructor() {\n    super(`method not implemented, it should be overloaded in the descendant class.`);\n  }\n}","import { XdrPrimitiveType } from './xdr-type';\nimport { XdrWriterError } from './errors';\n\nexport class Float extends XdrPrimitiveType {\n  /**\n   * @inheritDoc\n   */\n  static read(reader) {\n    return reader.readFloatBE();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  static write(value, writer) {\n    if (typeof value !== 'number')\n      throw new XdrWriterError('not a number');\n\n    writer.writeFloatBE(value);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  static isValid(value) {\n    return typeof value === 'number';\n  }\n}\n","import { XdrPrimitiveType } from './xdr-type';\nimport { XdrWriterError } from './errors';\n\nconst MIN_VALUE = -9223372036854775808n;\nconst MAX_VALUE = 9223372036854775807n;\n\nexport class Hyper extends XdrPrimitiveType {\n  constructor(low, high) {\n    super();\n    if (typeof low === 'bigint') {\n      if (low < MIN_VALUE || low > MAX_VALUE)\n        throw new TypeError('Invalid i64 value');\n      this._value = low;\n    } else {\n      if ((low | 0) !== low || (high | 0) !== high)\n        throw new TypeError('Invalid i64 value');\n      this._value = (BigInt(high >>> 0) << 32n) | BigInt(low >>> 0);\n    }\n  }\n\n  get low() {\n    return Number(this._value & 0xFFFFFFFFn) << 0;\n  }\n\n  get high() {\n    return Number(this._value >> 32n) >> 0;\n  }\n\n  get unsigned() {\n    return false;\n  }\n\n  toString() {\n    return this._value.toString();\n  }\n\n  toJSON() {\n    return {_value: this._value.toString()}\n  }\n\n  /**\n   * @inheritDoc\n   */\n  static read(reader) {\n    return new Hyper(reader.readBigInt64BE());\n  }\n\n  /**\n   * @inheritDoc\n   */\n  static write(value, writer) {\n    if (!(value instanceof this))\n      throw new XdrWriterError(`${value} is not a Hyper`);\n    writer.writeBigInt64BE(value._value);\n  }\n\n  /**\n   * Create Hyper instance from string\n   * @param {String} string - Numeric representation\n   * @return {Hyper}\n   */\n  static fromString(string) {\n    if (!/^-?\\d{0,19}$/.test(string))\n      throw new TypeError(`Invalid i64 string value: ${string}`);\n    return new Hyper(BigInt(string));\n  }\n\n  /**\n   * Create Hyper from two [high][low] i32 values\n   * @param {Number} low - Low part of i64 number\n   * @param {Number} high - High part of i64 number\n   * @return {Hyper}\n   */\n  static fromBits(low, high) {\n    return new this(low, high);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  static isValid(value) {\n    return value instanceof this;\n  }\n}\n\nHyper.MAX_VALUE = new Hyper(MAX_VALUE);\nHyper.MIN_VALUE = new Hyper(MIN_VALUE);\n","export * from './types';\nexport * from './config';\n","import { XdrPrimitiveType } from './xdr-type';\nimport { XdrWriterError } from './errors';\n\nconst MAX_VALUE = 2147483647;\nconst MIN_VALUE = -2147483648;\n\nexport class Int extends XdrPrimitiveType {\n  /**\n   * @inheritDoc\n   */\n  static read(reader) {\n    return reader.readInt32BE();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  static write(value, writer) {\n    if (typeof value !== 'number')\n      throw new XdrWriterError('not a number');\n\n    if ((value | 0) !== value)\n      throw new XdrWriterError('invalid i32 value');\n\n    writer.writeInt32BE(value);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  static isValid(value) {\n    if (typeof value !== 'number' || (value | 0) !== value) {\n      return false;\n    }\n\n    return value >= MIN_VALUE && value <= MAX_VALUE;\n  }\n}\n\nInt.MAX_VALUE = MAX_VALUE;\nInt.MIN_VALUE = -MIN_VALUE;\n","import { XdrCompositeType } from './xdr-type';\nimport { XdrWriterError } from './errors';\n\nexport class Opaque extends XdrCompositeType {\n  constructor(length) {\n    super();\n    this._length = length;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  read(reader) {\n    return reader.read(this._length);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  write(value, writer) {\n    const {length} = value;\n    if (length !== this._length)\n      throw new XdrWriterError(`got ${value.length} bytes, expected ${this._length}`);\n    writer.write(value, length);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  isValid(value) {\n    return Buffer.isBuffer(value) && value.length === this._length;\n  }\n}\n","import { Bool } from './bool';\nimport { XdrPrimitiveType } from './xdr-type';\n\nexport class Option extends XdrPrimitiveType {\n  constructor(childType) {\n    super();\n    this._childType = childType;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  read(reader) {\n    if (Bool.read(reader)) {\n      return this._childType.read(reader);\n    }\n\n    return undefined;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  write(value, writer) {\n    const isPresent = value !== null && value !== undefined;\n\n    Bool.write(isPresent, writer);\n\n    if (isPresent) {\n      this._childType.write(value, writer);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  isValid(value) {\n    if (value === null || value === undefined) {\n      return true;\n    }\n    return this._childType.isValid(value);\n  }\n}","import { XdrPrimitiveType } from './xdr-type';\nimport { XdrDefinitionError } from './errors';\n\nexport class Quadruple extends XdrPrimitiveType {\n  static read() {\n    throw new XdrDefinitionError('quadruple not supported');\n  }\n\n  static write() {\n    throw new XdrDefinitionError('quadruple not supported');\n  }\n\n  static isValid() {\n    return false;\n  }\n}\n","import { XdrPrimitiveType } from './xdr-type';\nimport { XdrDefinitionError } from './errors';\n\nexport class Reference extends XdrPrimitiveType {\n  /* jshint unused: false */\n  resolve() {\n    throw new XdrDefinitionError('\"resolve\" method should be implemented in the descendant class');\n  }\n}\n","/**\n * @internal\n */\nimport { XdrReaderError } from '../errors';\n\nexport class XdrReader {\n  /**\n   * @constructor\n   * @param {Buffer} source - Buffer containing serialized data\n   */\n  constructor(source) {\n    if (!Buffer.isBuffer(source)) {\n      if (source instanceof Array) {\n        source = Buffer.from(source)\n      } else {\n        throw new XdrReaderError('source not specified');\n      }\n    }\n\n    this._buffer = source;\n    this._length = source.length;\n    this._index = 0;\n  }\n\n  /**\n   * @type {Buffer}\n   * @private\n   * @readonly\n   */\n  _buffer\n  /**\n   * @type {Number}\n   * @private\n   * @readonly\n   */\n  _length\n  /**\n   * @type {Number}\n   * @private\n   * @readonly\n   */\n  _index\n\n  /**\n   * Check if the reader reached the end of the input buffer\n   * @return {Boolean}\n   */\n  get eof() {\n    return this._index === this._length;\n  }\n\n  /**\n   * Advance reader position, check padding and overflow\n   * @param {Number} size - Bytes to read\n   * @return {Number} Position to read from\n   * @private\n   */\n  advance(size) {\n    const from = this._index;\n    // advance cursor position\n    this._index += size;\n    // check buffer boundaries\n    if (this._length < this._index)\n      throw new XdrReaderError('attempt to read outside the boundary of the buffer');\n    // check that padding is correct for Opaque and String\n    const padding = 4 - (size % 4 || 4);\n    if (padding > 0) {\n      for (let i = 0; i < padding; i++)\n        if (this._buffer[this._index + i] !== 0) // all bytes in the padding should be zeros\n          throw new XdrReaderError('invalid padding');\n      this._index += padding;\n    }\n    return from;\n  }\n\n  /**\n   * Reset reader position\n   * @return {void}\n   */\n  rewind() {\n    this._index = 0\n  }\n\n  /**\n   * Read byte array from the buffer\n   * @param {Number} size - Bytes to read\n   * @return {Buffer} - Sliced portion of the underlying buffer\n   */\n  read(size) {\n    const from = this.advance(size);\n    return this._buffer.subarray(from, from + size);\n  }\n\n  /**\n   * Read i32 from buffer\n   * @return {Number}\n   */\n  readInt32BE() {\n    return this._buffer.readInt32BE(this.advance(4));\n  }\n\n  /**\n   * Read u32 from buffer\n   * @return {Number}\n   */\n  readUInt32BE() {\n    return this._buffer.readUInt32BE(this.advance(4));\n  }\n\n  /**\n   * Read i64 from buffer\n   * @return {BigInt}\n   */\n  readBigInt64BE() {\n    return this._buffer.readBigInt64BE(this.advance(8));\n  }\n\n  /**\n   * Read u64 from buffer\n   * @return {BigInt}\n   */\n  readBigUInt64BE() {\n    return this._buffer.readBigUInt64BE(this.advance(8));\n  }\n\n  /**\n   * Read float from buffer\n   * @return {Number}\n   */\n  readFloatBE() {\n    return this._buffer.readFloatBE(this.advance(4));\n  }\n\n  /**\n   * Read double from buffer\n   * @return {Number}\n   */\n  readDoubleBE() {\n    return this._buffer.readDoubleBE(this.advance(8));\n  }\n\n  /**\n   * Ensure that input buffer has been consumed in full, otherwise it's a type mismatch\n   * @return {void}\n   * @throws {XdrReaderError}\n   */\n  ensureInputConsumed() {\n    if (this._index !== this._length)\n      throw new XdrReaderError(`invalid XDR contract typecast - source buffer not entirely consumed`);\n  }\n}\n","const BUFFER_CHUNK = 8192; // 8 KB chunk size increment\n\n/**\n * @internal\n */\nexport class XdrWriter {\n  /**\n   * @param {Buffer|Number} [buffer] - Optional destination buffer\n   */\n  constructor(buffer) {\n    if (typeof buffer === 'number') {\n      buffer = Buffer.allocUnsafe(buffer);\n    } else if (!(buffer instanceof Buffer)) {\n      buffer = Buffer.allocUnsafe(BUFFER_CHUNK);\n    }\n    this._buffer = buffer;\n    this._length = buffer.length;\n  }\n\n  /**\n   * @type {Buffer}\n   * @private\n   * @readonly\n   */\n  _buffer\n  /**\n   * @type {Number}\n   * @private\n   * @readonly\n   */\n  _length\n  /**\n   * @type {Number}\n   * @private\n   * @readonly\n   */\n  _index = 0\n\n  /**\n   * Advance writer position, write padding if needed, auto-resize the buffer\n   * @param {Number} size - Bytes to write\n   * @return {Number} Position to read from\n   * @private\n   */\n  alloc(size) {\n    const from = this._index;\n    // advance cursor position\n    this._index += size;\n    // ensure sufficient buffer size\n    if (this._length < this._index) {\n      this.resize(this._index)\n    }\n    return from;\n  }\n\n  /**\n   * Increase size of the underlying buffer\n   * @param {Number} minRequiredSize - Minimum required buffer size\n   * @return {void}\n   * @private\n   */\n  resize(minRequiredSize) {\n    // calculate new length, align new buffer length by chunk size\n    const newLength = Math.ceil(minRequiredSize / BUFFER_CHUNK) * BUFFER_CHUNK;\n    // create new buffer and copy previous data\n    const newBuffer = Buffer.allocUnsafe(newLength)\n    this._buffer.copy(newBuffer, 0, 0, this._length)\n    // update references\n    this._buffer = newBuffer\n    this._length = newLength\n  }\n\n  /**\n   * Return XDR-serialized value\n   * @return {Buffer}\n   */\n  finalize() {\n    // clip underlying buffer to the actually written value\n    return this._buffer.subarray(0, this._index)\n  }\n\n  /**\n   * Return XDR-serialized value as byte array\n   * @return {Number[]}\n   */\n  toArray() {\n    return [...this.finalize()]\n  }\n\n  /**\n   * Write byte array from the buffer\n   * @param {Buffer|String} value - Bytes/string to write\n   * @param {Number} size - Size in bytes\n   * @return {XdrReader} - XdrReader wrapper on top of a subarray\n   */\n  write(value, size) {\n    if (typeof value === 'string') {\n      // serialize string directly to the output buffer\n      const offset = this.alloc(size);\n      this._buffer.write(value, offset, 'utf8');\n    } else {\n      // copy data to the output buffer\n      if (!(value instanceof Buffer)) {\n        value = Buffer.from(value);\n      }\n      const offset = this.alloc(size);\n      value.copy(this._buffer, offset, 0, size);\n    }\n\n    // add padding for 4-byte XDR alignment\n    const padding = 4 - (size % 4 || 4);\n    if (padding > 0) {\n      const offset = this.alloc(padding);\n      this._buffer.fill(0, offset, this._index);\n    }\n  }\n\n  /**\n   * Write i32 from buffer\n   * @param {Number} value - Value to serialize\n   * @return {void}\n   */\n  writeInt32BE(value) {\n    const offset = this.alloc(4);\n    this._buffer.writeInt32BE(value, offset);\n  }\n\n  /**\n   * Write u32 from buffer\n   * @param {Number} value - Value to serialize\n   * @return {void}\n   */\n  writeUInt32BE(value) {\n    const offset = this.alloc(4);\n    this._buffer.writeUInt32BE(value, offset);\n  }\n\n  /**\n   * Write i64 from buffer\n   * @param {BigInt} value - Value to serialize\n   * @return {void}\n   */\n  writeBigInt64BE(value) {\n    const offset = this.alloc(8);\n    this._buffer.writeBigInt64BE(value, offset);\n  }\n\n  /**\n   * Write u64 from buffer\n   * @param {BigInt} value - Value to serialize\n   * @return {void}\n   */\n  writeBigUInt64BE(value) {\n    const offset = this.alloc(8);\n    this._buffer.writeBigUInt64BE(value, offset);\n\n  }\n\n  /**\n   * Write float from buffer\n   * @param {Number} value - Value to serialize\n   * @return {void}\n   */\n  writeFloatBE(value) {\n    const offset = this.alloc(4);\n    this._buffer.writeFloatBE(value, offset);\n  }\n\n  /**\n   * Write double from buffer\n   * @param {Number} value - Value to serialize\n   * @return {void}\n   */\n  writeDoubleBE(value) {\n    const offset = this.alloc(8);\n    this._buffer.writeDoubleBE(value, offset);\n  }\n\n  static bufferChunkSize = BUFFER_CHUNK;\n}","import { UnsignedInt } from './unsigned-int';\nimport { XdrCompositeType } from './xdr-type';\nimport { XdrReaderError, XdrWriterError } from './errors';\n\nexport class String extends XdrCompositeType {\n  constructor(maxLength = UnsignedInt.MAX_VALUE) {\n    super();\n    this._maxLength = maxLength;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  read(reader) {\n    const size = UnsignedInt.read(reader);\n    if (size > this._maxLength)\n      throw new XdrReaderError(`saw ${size} length String, max allowed is ${this._maxLength}`);\n\n    return reader.read(size);\n  }\n\n  readString(reader) {\n    return this.read(reader).toString('utf8');\n  }\n\n  /**\n   * @inheritDoc\n   */\n  write(value, writer) {\n    // calculate string byte size before writing\n    const size = typeof value === 'string'?\n      Buffer.byteLength(value, 'utf8'):\n      value.length;\n    if (size > this._maxLength)\n      throw new XdrWriterError(`got ${value.length} bytes, max allowed is ${this._maxLength}`);\n    // write size info\n    UnsignedInt.write(size, writer);\n    writer.write(value, size);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  isValid(value) {\n    if (typeof value === 'string') {\n      return Buffer.byteLength(value, 'utf8') <= this._maxLength;\n    }\n    if (value instanceof Array || Buffer.isBuffer(value)) {\n      return value.length <= this._maxLength;\n    }\n    return false;\n  }\n}\n","import { Reference } from './reference';\nimport { XdrPrimitiveType } from './xdr-type';\nimport { XdrWriterError } from './errors';\n\nexport class Struct extends XdrPrimitiveType {\n  constructor(attributes) {\n    super();\n    this._attributes = attributes || {};\n  }\n\n  /**\n   * @inheritDoc\n   */\n  static read(reader) {\n    const attributes = {};\n    for (const [fieldName, type] of this._fields) {\n      attributes[fieldName] = type.read(reader);\n    }\n    return new this(attributes);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  static write(value, writer) {\n    if (!(value instanceof this))\n      throw new XdrWriterError(`${value} is not a ${this.structName}`);\n\n    for (const [fieldName, type] of this._fields) {\n      const attribute = value._attributes[fieldName];\n      type.write(attribute, writer);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  static isValid(value) {\n    return value instanceof this;\n  }\n\n  static create(context, name, fields) {\n    const ChildStruct = class extends Struct {\n    };\n\n    ChildStruct.structName = name;\n\n    context.results[name] = ChildStruct;\n\n    const mappedFields = new Array(fields.length);\n    for (let i = 0; i < fields.length; i++) {\n      const fieldDescriptor = fields[i];\n      const fieldName = fieldDescriptor[0];\n      let field = fieldDescriptor[1];\n      if (field instanceof Reference) {\n        field = field.resolve(context);\n      }\n      mappedFields[i] = [fieldName, field];\n      // create accessors\n      ChildStruct.prototype[fieldName] = createAccessorMethod(fieldName);\n    }\n\n    ChildStruct._fields = mappedFields;\n\n    return ChildStruct;\n  }\n}\n\nfunction createAccessorMethod(name) {\n  return function readOrWriteAttribute(value) {\n    if (value !== undefined) {\n      this._attributes[name] = value;\n    }\n    return this._attributes[name];\n  };\n}\n","export * from './int';\nexport * from './hyper';\nexport * from './unsigned-int';\nexport * from './unsigned-hyper';\n\nexport * from './float';\nexport * from './double';\nexport * from './quadruple';\n\nexport * from './bool';\n\nexport * from './string';\n\nexport * from './opaque';\nexport * from './var-opaque';\n\nexport * from './array';\nexport * from './var-array';\n\nexport * from './option';\nexport * from './void';\n\nexport * from './enum';\nexport * from './struct';\nexport * from './union';\n","import { Void } from './void';\nimport { Reference } from './reference';\nimport { XdrCompositeType } from './xdr-type';\nimport { XdrWriterError } from './errors';\n\nexport class Union extends XdrCompositeType {\n  constructor(aSwitch, value) {\n    super();\n    this.set(aSwitch, value);\n  }\n\n  set(aSwitch, value) {\n    if (typeof aSwitch === 'string') {\n      aSwitch = this.constructor._switchOn.fromName(aSwitch);\n    }\n\n    this._switch = aSwitch;\n    const arm = this.constructor.armForSwitch(this._switch);\n    this._arm = arm;\n    this._armType = arm === Void ? Void : this.constructor._arms[arm];\n    this._value = value;\n  }\n\n  get(armName = this._arm) {\n    if (this._arm !== Void && this._arm !== armName)\n      throw new TypeError(`${armName} not set`);\n    return this._value;\n  }\n\n  switch() {\n    return this._switch;\n  }\n\n  arm() {\n    return this._arm;\n  }\n\n  armType() {\n    return this._armType;\n  }\n\n  value() {\n    return this._value;\n  }\n\n  static armForSwitch(aSwitch) {\n    const member = this._switches.get(aSwitch);\n    if (member !== undefined) {\n      return member;\n    }\n    if (this._defaultArm) {\n      return this._defaultArm;\n    }\n    throw new TypeError(`Bad union switch: ${aSwitch}`);\n  }\n\n  static armTypeForArm(arm) {\n    if (arm === Void) {\n      return Void;\n    }\n    return this._arms[arm];\n  }\n\n  /**\n   * @inheritDoc\n   */\n  static read(reader) {\n    const aSwitch = this._switchOn.read(reader);\n    const arm = this.armForSwitch(aSwitch);\n    const armType = arm === Void ? Void : this._arms[arm];\n    let value;\n    if (armType !== undefined) {\n      value = armType.read(reader);\n    } else {\n      value = arm.read(reader);\n    }\n    return new this(aSwitch, value);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  static write(value, writer) {\n    if (!(value instanceof this))\n      throw new XdrWriterError(`${value} is not a ${this.unionName}`);\n\n    this._switchOn.write(value.switch(), writer);\n    value.armType().write(value.value(), writer);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  static isValid(value) {\n    return value instanceof this;\n  }\n\n  static create(context, name, config) {\n    const ChildUnion = class extends Union {\n    };\n\n    ChildUnion.unionName = name;\n    context.results[name] = ChildUnion;\n\n    if (config.switchOn instanceof Reference) {\n      ChildUnion._switchOn = config.switchOn.resolve(context);\n    } else {\n      ChildUnion._switchOn = config.switchOn;\n    }\n\n    ChildUnion._switches = new Map();\n    ChildUnion._arms = {};\n\n    // resolve default arm\n    let defaultArm = config.defaultArm;\n    if (defaultArm instanceof Reference) {\n      defaultArm = defaultArm.resolve(context);\n    }\n\n    ChildUnion._defaultArm = defaultArm;\n\n    for (const [aSwitch, armName] of config.switches) {\n      const key = typeof aSwitch === 'string' ?\n        ChildUnion._switchOn.fromName(aSwitch) :\n        aSwitch;\n\n      ChildUnion._switches.set(key, armName);\n    }\n\n    // add enum-based helpers\n    // NOTE: we don't have good notation for \"is a subclass of XDR.Enum\",\n    //  and so we use the following check (does _switchOn have a `values`\n    //  attribute) to approximate the intent.\n    if (ChildUnion._switchOn.values !== undefined) {\n      for (const aSwitch of ChildUnion._switchOn.values()) {\n        // Add enum-based constructors\n        ChildUnion[aSwitch.name] = function ctr(value) {\n          return new ChildUnion(aSwitch, value);\n        };\n\n        // Add enum-based \"set\" helpers\n        ChildUnion.prototype[aSwitch.name] = function set(value) {\n          return this.set(aSwitch, value);\n        };\n      }\n    }\n\n    if (config.arms) {\n      for (const [armsName, value] of Object.entries(config.arms)) {\n        ChildUnion._arms[armsName] = (value instanceof Reference) ?\n          value.resolve(context) :\n          value;\n        // Add arm accessor helpers\n        if (value !== Void) {\n          ChildUnion.prototype[armsName] = function get() {\n            return this.get(armsName);\n          };\n        }\n      }\n    }\n\n    return ChildUnion;\n  }\n}\n","import { XdrPrimitiveType } from './xdr-type';\nimport { XdrWriterError } from './errors';\n\nconst MIN_VALUE = 0n;\nconst MAX_VALUE = 0xFFFFFFFFFFFFFFFFn;\n\nexport class UnsignedHyper extends XdrPrimitiveType {\n  constructor(low, high) {\n    super();\n    if (typeof low === 'bigint') {\n      if (low < MIN_VALUE || low > MAX_VALUE)\n        throw new TypeError('Invalid u64 value');\n      this._value = low;\n    } else {\n      if ((low | 0) !== low || (high | 0) !== high)\n        throw new TypeError('Invalid u64 value');\n      this._value = (BigInt(high >>> 0) << 32n) | BigInt(low >>> 0);\n    }\n  }\n\n  get low() {\n    return Number(this._value & 0xFFFFFFFFn) << 0;\n  }\n\n  get high() {\n    return Number(this._value >> 32n) >> 0;\n  }\n\n  get unsigned() {\n    return true;\n  }\n\n  toString() {\n    return this._value.toString();\n  }\n\n  toJSON() {\n    return {_value: this._value.toString()}\n  }\n\n  /**\n   * @inheritDoc\n   */\n  static read(reader) {\n    return new UnsignedHyper(reader.readBigUInt64BE());\n  }\n\n  /**\n   * @inheritDoc\n   */\n  static write(value, writer) {\n    if (!(value instanceof this))\n      throw new XdrWriterError(`${value} is not an UnsignedHyper`);\n    writer.writeBigUInt64BE(value._value);\n  }\n\n  /**\n   * Create UnsignedHyper instance from string\n   * @param {String} string - Numeric representation\n   * @return {UnsignedHyper}\n   */\n  static fromString(string) {\n    if (!/^\\d{0,20}$/.test(string))\n      throw new TypeError(`Invalid u64 string value: ${string}`);\n    return new UnsignedHyper(BigInt(string));\n  }\n\n  /**\n   * Create UnsignedHyper from two [high][low] i32 values\n   * @param {Number} low - Low part of u64 number\n   * @param {Number} high - High part of u64 number\n   * @return {UnsignedHyper}\n   */\n  static fromBits(low, high) {\n    return new this(low, high);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  static isValid(value) {\n    return value instanceof this;\n  }\n}\n\nUnsignedHyper.MAX_VALUE = new UnsignedHyper(MAX_VALUE);\nUnsignedHyper.MIN_VALUE = new UnsignedHyper(MIN_VALUE);\n","import { XdrPrimitiveType } from './xdr-type';\nimport { XdrWriterError } from './errors';\n\nconst MAX_VALUE = 4294967295;\nconst MIN_VALUE = 0;\n\nexport class UnsignedInt extends XdrPrimitiveType {\n  /**\n   * @inheritDoc\n   */\n  static read(reader) {\n    return reader.readUInt32BE();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  static write(value, writer) {\n    if (typeof value !== 'number' || !(value >= MIN_VALUE && value <= MAX_VALUE) || value % 1 !== 0)\n      throw new XdrWriterError('invalid u32 value');\n\n    writer.writeUInt32BE(value);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  static isValid(value) {\n    if (typeof value !== 'number' || value % 1 !== 0) {\n      return false;\n    }\n\n    return value >= MIN_VALUE && value <= MAX_VALUE;\n  }\n}\n\nUnsignedInt.MAX_VALUE = MAX_VALUE;\nUnsignedInt.MIN_VALUE = MIN_VALUE;\n","import { UnsignedInt } from './unsigned-int';\nimport { XdrCompositeType } from './xdr-type';\nimport { XdrReaderError, XdrWriterError } from './errors';\n\nexport class VarArray extends XdrCompositeType {\n  constructor(childType, maxLength = UnsignedInt.MAX_VALUE) {\n    super();\n    this._childType = childType;\n    this._maxLength = maxLength;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  read(reader) {\n    const length = UnsignedInt.read(reader);\n    if (length > this._maxLength)\n      throw new XdrReaderError(`saw ${length} length VarArray, max allowed is ${this._maxLength}`);\n\n    const result = new Array(length);\n    for (let i = 0; i < length; i++) {\n      result[i] = this._childType.read(reader);\n    }\n    return result;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  write(value, writer) {\n    if (!(value instanceof Array))\n      throw new XdrWriterError(`value is not array`);\n\n    if (value.length > this._maxLength)\n      throw new XdrWriterError(`got array of size ${value.length}, max allowed is ${this._maxLength}`);\n\n    UnsignedInt.write(value.length, writer);\n    for (const child of value) {\n      this._childType.write(child, writer);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  isValid(value) {\n    if (!(value instanceof Array) || value.length > this._maxLength) {\n      return false;\n    }\n    for (const child of value) {\n      if (!this._childType.isValid(child))\n        return false;\n    }\n    return true;\n  }\n}\n","import { UnsignedInt } from './unsigned-int';\nimport { XdrCompositeType } from './xdr-type';\nimport { XdrReaderError, XdrWriterError } from './errors';\n\nexport class VarOpaque extends XdrCompositeType {\n  constructor(maxLength = UnsignedInt.MAX_VALUE) {\n    super();\n    this._maxLength = maxLength;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  read(reader) {\n    const size = UnsignedInt.read(reader);\n    if (size > this._maxLength)\n      throw new XdrReaderError(`saw ${size} length VarOpaque, max allowed is ${this._maxLength}`);\n    return reader.read(size);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  write(value, writer) {\n    const {length} = value;\n    if (value.length > this._maxLength)\n      throw new XdrWriterError(`got ${value.length} bytes, max allowed is ${this._maxLength}`);\n    // write size info\n    UnsignedInt.write(length, writer);\n    writer.write(value, length);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  isValid(value) {\n    return Buffer.isBuffer(value) && value.length <= this._maxLength;\n  }\n}\n","import { XdrPrimitiveType } from './xdr-type';\nimport { XdrWriterError } from './errors';\n\nexport class Void extends XdrPrimitiveType {\n  /* jshint unused: false */\n\n  static read() {\n    return undefined;\n  }\n\n  static write(value) {\n    if (value !== undefined)\n      throw new XdrWriterError('trying to write value to a void slot');\n  }\n\n  static isValid(value) {\n    return value === undefined;\n  }\n}\n","import { XdrReader } from './serialization/xdr-reader';\nimport { XdrWriter } from './serialization/xdr-writer';\nimport { XdrNotImplementedDefinitionError } from './errors';\n\nclass XdrType {\n\n  /**\n   * Encode value to XDR format\n   * @param {XdrEncodingFormat} [format] - Encoding format (one of \"raw\", \"hex\", \"base64\")\n   * @return {String|Buffer}\n   */\n  toXDR(format = 'raw') {\n    if (!this.write)\n      return this.constructor.toXDR(this, format);\n\n    const writer = new XdrWriter();\n    this.write(this, writer);\n    return encodeResult(writer.finalize(), format);\n  }\n\n  /**\n   * Decode XDR-encoded value\n   * @param {Buffer|String} input - XDR-encoded input data\n   * @param {XdrEncodingFormat} [format] - Encoding format (one of \"raw\", \"hex\", \"base64\")\n   * @return {XdrType}\n   */\n  fromXDR(input, format = 'raw') {\n    if (!this.read)\n      return this.constructor.fromXDR(input, format);\n\n    const reader = new XdrReader(decodeInput(input, format));\n    const result = this.read(reader);\n    reader.ensureInputConsumed();\n    return result;\n  }\n\n  /**\n   * Check whether input contains a valid XDR-encoded value\n   * @param {Buffer|String} input - XDR-encoded input data\n   * @param {XdrEncodingFormat} [format] - Encoding format (one of \"raw\", \"hex\", \"base64\")\n   * @return {Boolean}\n   */\n  validateXDR(input, format = 'raw') {\n    try {\n      this.fromXDR(input, format);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  /**\n   * Encode value to XDR format\n   * @param {XdrPrimitiveType} value - Value to serialize\n   * @param {XdrEncodingFormat} [format] - Encoding format (one of \"raw\", \"hex\", \"base64\")\n   * @return {Buffer}\n   */\n  static toXDR(value, format = 'raw') {\n    const writer = new XdrWriter();\n    this.write(value, writer);\n    return encodeResult(writer.finalize(), format);\n  }\n\n  /**\n   * Decode XDR-encoded value\n   * @param {Buffer|String} input - XDR-encoded input data\n   * @param {XdrEncodingFormat} [format] - Encoding format (one of \"raw\", \"hex\", \"base64\")\n   * @return {XdrType}\n   */\n  static fromXDR(input, format = 'raw') {\n    const reader = new XdrReader(decodeInput(input, format));\n    const result = this.read(reader);\n    reader.ensureInputConsumed();\n    return result;\n  }\n\n  /**\n   * Check whether input contains a valid XDR-encoded value\n   * @param {Buffer|String} input - XDR-encoded input data\n   * @param {XdrEncodingFormat} [format] - Encoding format (one of \"raw\", \"hex\", \"base64\")\n   * @return {Boolean}\n   */\n  static validateXDR(input, format = 'raw') {\n    try {\n      this.fromXDR(input, format);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n}\n\nexport class XdrPrimitiveType extends XdrType {\n  /**\n   * Read value from the XDR-serialized input\n   * @param {XdrReader} reader - XdrReader instance\n   * @return {*}\n   * @abstract\n   */\n  // eslint-disable-next-line no-unused-vars\n  static read(reader) {\n    throw new XdrNotImplementedDefinitionError()\n  }\n\n  /**\n   * Write XDR value to the buffer\n   * @param {*} value - Value to write\n   * @param {XdrWriter} writer - XdrWriter instance\n   * @return {void}\n   * @abstract\n   */\n  // eslint-disable-next-line no-unused-vars\n  static write(value, writer) {\n    throw new XdrNotImplementedDefinitionError()\n  }\n\n  /**\n   * Check whether XDR primitive value is valid\n   * @param {XdrType} value - Value to check\n   * @return {Boolean}\n   * @abstract\n   */\n  // eslint-disable-next-line no-unused-vars\n  static isValid(value) {\n    return false;\n  }\n}\n\nexport class XdrCompositeType extends XdrType {\n  // Every descendant should implement two methods: read(reader) and write(value, writer)\n\n  /**\n   * Check whether XDR primitive value is valid\n   * @param {XdrType} value - Value to check\n   * @return {Boolean}\n   * @abstract\n   */\n  // eslint-disable-next-line no-unused-vars\n  isValid(value) {\n    return false;\n  }\n}\n\nclass InvalidXdrEncodingFormatError extends TypeError {\n  constructor(format) {\n    super(`Invalid format ${format}, must be one of \"raw\", \"hex\", \"base64\"`);\n  }\n}\n\nfunction encodeResult(buffer, format) {\n  switch (format) {\n    case 'raw':\n      return buffer;\n    case 'hex':\n      return buffer.toString('hex');\n    case 'base64':\n      return buffer.toString('base64');\n    default:\n      throw new InvalidXdrEncodingFormatError(format);\n  }\n}\n\nfunction decodeInput(input, format) {\n  switch (format) {\n    case 'raw':\n      return input;\n    case 'hex':\n      return Buffer.from(input, 'hex');\n    case 'base64':\n      return Buffer.from(input, 'base64');\n    default:\n      throw new InvalidXdrEncodingFormatError(format);\n  }\n}\n\n/**\n * @typedef {'raw'|'hex'|'base64'} XdrEncodingFormat\n */\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/browser.js\");\n",""],"names":["XdrCompositeType","XdrWriterError","Array","constructor","childType","length","_childType","_length","read","reader","result","global","i","write","value","writer","child","isValid","Int","XdrPrimitiveType","XdrReaderError","Bool","intVal","exports","require","module","XDRTypes","Reference","XdrDefinitionError","SimpleReference","name","resolve","context","defn","definitions","ArrayReference","childReference","variable","arguments","undefined","resolvedChild","VarArray","OptionReference","Option","SizedReference","sizedType","Definition","cfg","config","results","createTypedef","typeName","createConst","TypeBuilder","destination","_destination","_definitions","enum","members","Enum","create","define","struct","Struct","union","Union","typedef","const","void","Void","bool","int","hyper","Hyper","uint","UnsignedInt","uhyper","UnsignedHyper","float","Float","double","Double","quadruple","Quadruple","string","String","opaque","Opaque","varOpaque","VarOpaque","array","varArray","maxLength","option","definition","lookup","Object","values","fn","types","builder","readDoubleBE","writeDoubleBE","res","_byValue","enumName","_members","fromName","TypeError","fromValue","ChildEnum","key","entries","inst","message","XdrNotImplementedDefinitionError","readFloatBE","writeFloatBE","MIN_VALUE","MAX_VALUE","low","high","_value","BigInt","Number","unsigned","toString","toJSON","readBigInt64BE","writeBigInt64BE","fromString","test","fromBits","readInt32BE","writeInt32BE","Buffer","isBuffer","isPresent","XdrReader","source","from","_buffer","_index","eof","advance","size","padding","rewind","subarray","readUInt32BE","readBigUInt64BE","ensureInputConsumed","BUFFER_CHUNK","XdrWriter","buffer","allocUnsafe","alloc","resize","minRequiredSize","newLength","Math","ceil","newBuffer","copy","finalize","toArray","offset","fill","writeUInt32BE","writeBigUInt64BE","bufferChunkSize","_maxLength","readString","byteLength","attributes","_attributes","fieldName","type","_fields","structName","attribute","fields","ChildStruct","mappedFields","fieldDescriptor","field","prototype","createAccessorMethod","readOrWriteAttribute","aSwitch","set","_switchOn","_switch","arm","armForSwitch","_arm","_armType","_arms","get","armName","switch","armType","member","_switches","_defaultArm","armTypeForArm","unionName","ChildUnion","switchOn","Map","defaultArm","switches","ctr","arms","armsName","XdrType","toXDR","format","encodeResult","fromXDR","input","decodeInput","validateXDR","e","InvalidXdrEncodingFormatError"],"sourceRoot":""}